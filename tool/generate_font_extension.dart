import 'dart:convert';
import 'dart:io';

import 'package:recase/recase.dart';

void main(List<String> arguments) {
  var file = new File(arguments.first);

  if (!file.existsSync()) {
    print('Cannot find the file "${arguments.first}".');
  }

  var content = file.readAsStringSync();
  Map<String, dynamic> icons = json.decode(content);

  Map<String, String> iconDefinitions = {};

  bool hasDuotone = false;

  for (String iconName in icons.keys) {
    var icon = icons[iconName];
    var unicode = icon['unicode'];
    List<String> styles = (icon['styles'] as List).cast<String>();

    if (styles.length > 1) {
      if (styles.contains('regular')) {
        styles.remove('regular');
        iconDefinitions[iconName] = generateIconDefinition(
          iconName,
          'regular',
          unicode,
        );
      }

      if (styles.contains('duotone')) {
        hasDuotone = true;
      }

      for (String style in styles) {
        String name = '${style}_$iconName';
        iconDefinitions[name] = generateIconDefinition(
          name,
          style,
          unicode,
        );
      }
    } else {
      iconDefinitions[iconName] = generateIconDefinition(
        iconName,
        styles.first,
        unicode,
      );
    }
  }

  List<String> generatedOutput = [
    'library font_awesome_flutter_extension;',
    '',
    "import 'package:flutter/cupertino.dart';",
    "import 'package:font_awesome_flutter/font_awesome_flutter.dart';",
  ];

  if (hasDuotone) {
    generatedOutput.add(
        "export 'package:font_awesome_flutter/src/fa_duotone_icon_extension.dart';");
  }

  generatedOutput.addAll([
    '',
    '// THIS FILE IS AUTOMATICALLY GENERATED!',
    '',
    'extension FaIconEx on String {',
    '   IconData toFontAwesomeIcon() {',
    '     switch (this) {',
  ]);

  generatedOutput.addAll(iconDefinitions.values);

  generatedOutput.addAll([
    '       default:',
    "         return IconData(0xe14c, fontFamily: 'MaterialIcons');",
    '     }',
    '   }',
    '}'
  ]);

  File output = new File('lib/font_awesome_flutter_extension.dart');
  output.writeAsStringSync(generatedOutput.join('\n'));
}

String generateIconDefinition(String iconName, String style, String unicode) {
  style = '${style[0].toUpperCase()}${style.substring(1)}';

  if (iconName == '500px') {
    iconName = 'fiveHundredPx';
  }

  var formattedIconName = new ReCase(iconName).camelCase;

  List<String> generatedOutput = [
    'case \'$iconName\':',
    '   return FontAwesomeIcons.$formattedIconName;',
  ];
  return generatedOutput.join('\n');
}
